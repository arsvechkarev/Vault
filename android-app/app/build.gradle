plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'kotlin-parcelize'
}

android {
  signingConfigs {
//    Properties properties = new Properties()
//    properties.load(new FileInputStream(file("../local.properties")))
//    release {
//      storeFile file(properties["storeFile"])
//      storePassword properties["storePassword"]
//      keyAlias properties["keyAlias"]
//      keyPassword properties["keyPassword"]
//    }
  }
  def ext = rootProject.ext
  compileSdkVersion ext.compileSdkVersion
  defaultConfig {
    applicationId ext.applicationId
    minSdkVersion ext.minSdkVersion
    targetSdkVersion ext.targetSdkVersion
    versionCode ext.versionCode
    versionName ext.versionName
//    signingConfig signingConfigs.release
  }
//  buildTypes {
//    debug {
//      applicationIdSuffix ".debug"
//    }
//    release {
//      minifyEnabled ext.minifyEnabled
//      shrinkResources ext.shrinkResources
//      proguardFiles(getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro')
//    }
//    mock {
//      initWith debug
//    }
//  }
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

dependencies {

  implementation project(':android-app:config')
  implementation project(':android-app:buisness-logic')
  implementation project(':android-app:navigation')
  implementation project(':android-app:viewdsl')
  implementation project(':common-crypto')

  def appDependencies = rootProject.ext.applicationDependencies
  implementation appDependencies.kotlin
  implementation appDependencies.appCompat
  implementation appDependencies.coroutinesCore
  implementation appDependencies.coroutinesAndroid
  implementation appDependencies.coordinatorLayout
  implementation appDependencies.constraintLayout
  implementation appDependencies.recyclerView
  implementation appDependencies.zxcvbn
  implementation appDependencies.androidSecurity
  implementation appDependencies.biometric
  implementation appDependencies.timber
  implementation appDependencies.lifecycleRuntime

  def testDependencies = rootProject.ext.testDependencies
  testImplementation testDependencies.junit
  testImplementation testDependencies.gson

//  debugImplementation appDependencies.leakCanary
}
